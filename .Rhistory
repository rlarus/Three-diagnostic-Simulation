denom_p1245 <- denom(frac_p1245)
if(nom_p1245<100) {
nom_p1245 <-nom_p1245*d.e
denom_p1245 <-denom_p1245*d.e
}
if(nom_p1245 > 1000000000) {
nom_p1245 <- round(nom_p1245/d.e)
denom_p1245 <- denom_p1245/d.e
}
p1[c(1,2,4,5)] <- combn_rep(nom_p1245, 4)/denom_p1245
if(all(p1>0)) break;
j<-j+1
if(j==max.try) {p1<-rep(NA,9)}
}
} else {
p1 <- rep(NA ,9)
}
if(!any(is.na(c(p0,p1)))) break;
t <- t+1
if(t==100) {
p0<-rep(NA,9)
p1 <- rep(NA,9)
}
}
return(list(data.frame(p1=p1, p0=p0), c(eta1, eta2)))
}
npv_prob_generate(0.1,0.5,0.6,0.65,0.65)
source('functions.R')
library(MASS)
library(plyr)
library(numbers)
options(digits=8)
########################################################################
## set N
########################################################################
setN <- c(100,200, 350, 500)
PI <- c(0.1,0.3,0.5)
XI1 <- c(0.5,0.75,0.85,0.5,0.7)
XI2 <- c(0.6,0.85,0.95,0.7,0.95)
XI <- cbind(XI1, XI2)
NPV1 <- c(0.65,0.75,0.85)
NPV2 <- c(0.65,0.75,0.85)
NPV <- cbind(NPV1, NPV2)
prob <- wrap_npv_prob_generate(PI, XI, NPV)
prob
View(prob)
PI <- c(0.1,0.3,0.5)
XI1 <- c(0.5,0.75,0.85)
XI2 <- c(0.5,0.75,0.85)
XI <- cbind(XI1, XI2)
PPV1 <- c(0.65,0.75,0.85,0.65,0.75)
PPV2 <- c(0.75,0.85,0.95,0.85,0.95)
PPV <- cbind(PPV1, PPV2)
prob <- wrap_prob_generate(PI, XI, PPV, equal_hypothesis = TRUE)
prob <- wrap_npv_prob_generate(PI, XI, PPV, equal_hypothesis = TRUE)
prob <- wrap_npv_prob_generate(PI, XI, PPV)
prob
PI <- c(0.1,0.3,0.5)
XI1 <- c(0.5,0.75,0.85,0.5,0.7,0.6,0.85,0.95,0.7,0.95)
XI2 <- c(0.6,0.85,0.95,0.7,0.95,0.5,0.75,0.85,0.5,0.7)
XI <- cbind(XI1, XI2)
PPV1 <- c(0.65,0.75,0.85,0.65,0.75)
PPV2 <- c(0.75,0.85,0.95,0.85,0.95)
PPV <- cbind(PPV1, PPV2)
prob <- wrap_prob_generate(PI, XI, PPV, equal_hypothesis = FALSE)
prob
prob <- wrap_npv_prob_generate(PI, XI, PPV, equal_hypothesis = FALSE)
prob <- wrap_npv_prob_generate(PI, XI, PPV)
prob
npv_simulation <- function(N, prob, n_data=10000, seed=881128) {
p1 <- as.numeric(prob[grep("p1", colnames(prob))])
p0 <- as.numeric(prob[grep("p0", colnames(prob))])
## p1,p0 generate
simul_data <- simul_data_generate(n_data, N, p1, p0, seed, IsPPV=FALSE)
npv1 <- simul_data[[1]][1]
npv2 <- simul_data[[1]][2]
xi1 <- simul_data[[1]][3]
xi2 <- simul_data[[1]][4]
eta1 <- simul_data[[1]][5]
eta2 <- simul_data[[1]][6]
test1 <- round(prob$npv1,4) == npv1; test2 <- round(prob$npv2,4) == npv2; test3 <- round(prob$xi1, 4) == xi1; test4 <- round(prob$xi2,4) == xi2; test5 <- round(prob$eta1,4) == eta1; test6 <- round(prob$eta2,4) == eta2
if(!all(c(test1,test2,test3,test4,test5,test6))) stop("error!")
test_pval <- rep(0,n_data)
for(i in 1:n_data) test_pval[i] <- npv_test(simul_data[[2]][,i])$p.value
result_prob <- sum(test_pval<0.05, na.rm=T)/n_data
final <- data.frame(N)
prob_mat <- c(p1, p0)
prob_mat<-data.frame(t(prob_mat))
colnames(prob_mat) <- c(paste("p1", 1:9, sep=""),paste("p0", 1:9, sep=""))
result_mat <- data.frame(t(c(npv1, npv2, abs(npv1-npv2), prob$pi, prob$xi1,prob$xi2, prob$eta1, prob$eta2, result_prob)))
colnames(result_mat)[1:8] <- c("NPV1","NPV2", "d0", "PI", "XI1", "XI2", "ETA1","ETA2")
if(npv1==npv2) colnames(result_mat)[9] <- "nominal"
if(npv1!=npv2) colnames(result_mat)[9] <- "power"
result <- cbind(final,prob_mat, result_mat)
rownames(result) <- 1
return(result)
}
wrap_npv_simulation <- function(case=c("nominal","power"), equal_hypothesis, N, prob) {
for(i in 1:nrow(prob)){
for(j in 1:length(N)){
if(i==1 && j==1) {
output <- npv_simulation(N[j], prob[i,])
} else {
output <- rbind(output, npv_simulation(N[j], prob[i,]))
}
}
}
###
result <- prob
for(n in 1:length(N)){
result_temp <- data.frame(rep(NA,nrow(result)))
colnames(result_temp) <- paste0("N", N[n])
result <- cbind(result, result_temp)
}
for(i in 1:nrow(result)) {
result[i,26:(26+length(N)-1)] <- output[output$PI == result$pi[i] & output$NPV1 == result$npv1[i] & output$NPV2 == result$npv2[i] & output$XI1 == result$xi1[i] & output$XI2 == result$xi2[i] & output$ETA1 == result$eta1[i] & output$ETA2 == result$eta2[i],][,case]
}
return(result)
}
source('functions.R')
library(MASS)
library(plyr)
library(numbers)
options(digits=8)
########################################################################
## set N
########################################################################
setN <- c(100,200, 350, 500)
PI <- c(0.1,0.3,0.5)
XI1 <- c(0.5,0.75,0.85)
XI2 <- c(0.5,0.75,0.85)
XI <- cbind(XI1, XI2)
NPV1 <- c(0.65,0.75,0.85)
NPV2 <- c(0.65,0.75,0.85)
NPV <- cbind(NPV1, NPV2)
prob <- wrap_npv_prob_generate(PI, XI, NPV)
result <- wrap_npv_simulation("nominal", setN, prob)
prob
prob
prob$p11
is.na(prob$p11)
!is.na(prob$p11)
prob[!is.na(prob$p11),]
prob <- prob[!is.na(prob$p11),]
result <- wrap_npv_simulation("nominal", setN, prob)
result
prob
source('functions.R')
library(MASS)
library(plyr)
library(numbers)
options(digits=8)
########################################################################
## set N
########################################################################
setN <- c(100,200, 350, 500)
PI <- c(0.1,0.3,0.5)
XI1 <- c(0.5,0.75,0.85)
XI2 <- c(0.5,0.75,0.85)
XI <- cbind(XI1, XI2)
NPV1 <- c(0.65,0.75,0.85)
NPV2 <- c(0.65,0.75,0.85)
NPV <- cbind(NPV1, NPV2)
prob <- wrap_npv_prob_generate(PI, XI, NPV)
prob <- prob[!is.na(prob$p11),]
result <- wrap_npv_simulation("nominal", setN, prob)
write.csv(result, "./data/npv_nominal_equal_1114.csv")
PI <- c(0.1,0.3,0.5)
XI1 <- c(0.5,0.75,0.85,0.5,0.7)
XI2 <- c(0.6,0.85,0.95,0.7,0.95)
XI <- cbind(XI1, XI2)
NPV1 <- c(0.65,0.75,0.85)
NPV2 <- c(0.65,0.75,0.85)
NPV <- cbind(NPV1, NPV2)
prob <- wrap_npv_prob_generate(PI, XI, NPV)
prob
prob <- prob[!is.na(prob$p11),]
result <- wrap_npv_simulation("nominal", setN, prob)
write.csv(result, "./data/npv_nominal_nonequal_1114.csv")
PI <- c(0.1,0.3,0.5)
XI1 <- c(0.5,0.75,0.85,0.5,0.7,0.6,0.85,0.95,0.7,0.95)
XI2 <- c(0.6,0.85,0.95,0.7,0.95,0.5,0.75,0.85,0.5,0.7)
XI <- cbind(XI1, XI2)
PPV1 <- c(0.65,0.75,0.85,0.65,0.75)
PPV2 <- c(0.75,0.85,0.95,0.85,0.95)
PPV <- cbind(PPV1, PPV2)
PI <- c(0.1,0.3,0.5)
XI1 <- c(0.5,0.75,0.85,0.5,0.7,0.6,0.85,0.95,0.7,0.95)
XI2 <- c(0.6,0.85,0.95,0.7,0.95,0.5,0.75,0.85,0.5,0.7)
XI <- cbind(XI1, XI2)
NPV1 <- c(0.65,0.75,0.85,0.65,0.75)
NPV2 <- c(0.75,0.85,0.95,0.85,0.95)
NPV <- cbind(NPV1, NPV2)
prob <- wrap_npv_prob_generate(PI, XI, NPV)
prob
View(prob)
prob <- prob[!is.na(prob$p11),]
result <- wrap_npv_simulation("power", setN, prob)
write.csv(result, "./data/npv_power_nonequal_1114.csv")
source('functions.R')
library(MASS)
library(plyr)
library(numbers)
options(digits=8)
########################################################################
## set N
########################################################################
setN <- c(100,200, 350, 500)
ppv_prob_generate(0.3, 0.75, 0.75, 0.65, 0.85, equal_hypothesis = TRUE)
a <- ppv_prob_generate(0.3, 0.75, 0.75, 0.65, 0.85, equal_hypothesis = TRUE)
PI <- c(0.1,0.3,0.5)
XI1 <- c(0.5,0.75,0.85)
XI2 <- c(0.5,0.75,0.85)
XI <- cbind(XI1, XI2)
PPV1 <- c(0.65,0.75,0.85,0.65,0.75)
PPV2 <- c(0.75,0.85,0.95,0.85,0.95)
PPV <- cbind(PPV1, PPV2)
prob <- wrap_ppv_prob_generate(PI, XI, PPV, equal_hypothesis = TRUE)
View(prob)
result <- wrap_simulation("power", equal_hypothesis = TRUE, setN, prob)
result <- wrap_ppv_simulation("power", equal_hypothesis = TRUE, setN, prob)
View(result)
PI <- c(0.1,0.3,0.5)
XI1 <- c(0.5,0.75,0.85)
XI2 <- c(0.5,0.75,0.85)
XI <- cbind(XI1, XI2)
PPV1 <- c(0.65,0.75,0.85,0.65,0.75)
PPV2 <- c(0.75,0.85,0.95,0.85,0.95)
PPV <- cbind(PPV1, PPV2)
prob <- wrap_ppv_prob_generate(PI, XI, PPV, equal_hypothesis = TRUE)
result <- wrap_ppv_simulation("power", equal_hypothesis = TRUE, setN, prob)
View(result)
prob <- wrap_ppv_prob_generate(PI, XI, PPV, equal_hypothesis = TRUE)
result <- wrap_ppv_simulation("power", equal_hypothesis = TRUE, setN, prob)
View(result)
ppv_prob_generate(0.3, 0.75,0.75,0.65,0.85)
ppv_prob_generate(0.3, 0.75,0.75,0.65,0.85, equal_hypothesis = T)
ppv_prob_generate(0.3, 0.75,0.75,0.65,0.85, equal_hypothesis = T)
ppv_prob_generate(0.3, 0.75,0.75,0.65,0.85, equal_hypothesis = T)
View(prob)
ppv_prob_generate(0.3, 0.75,0.75,0.65,0.85, equal_hypothesis = T)
a <- ppv_prob_generate(0.3, 0.75,0.75,0.65,0.85, equal_hypothesis = T)
a
a <- ppv_prob_generate(0.3, 0.75,0.75,0.65,0.85, equal_hypothesis = T)
a
prob[prob$pi == 0.3 & prob$xi1 == 0.75 & prob$xi2 == 0.75 & prob$ppv1 == 0.65 & prob$ppv1 == 0.85 &]
prob[prob$pi == 0.3 & prob$xi1 == 0.75 & prob$xi2 == 0.75 & prob$ppv1 == 0.65 & prob$ppv1 == 0.85,]
prob[prob$pi == 0.3 & prob$xi1 == 0.75 & prob$xi2 == 0.75 & prob$ppv1 == 0.65 & prob$ppv2 == 0.85,]
a
a[[3]][1]
prob[prob$pi == 0.3 & prob$xi1 == 0.75 & prob$xi2 == 0.75 & prob$ppv1 == 0.65 & prob$ppv2 == 0.85,]$eta1 <- a[[3]][1]
prob[prob$pi == 0.3 & prob$xi1 == 0.75 & prob$xi2 == 0.75 & prob$ppv1 == 0.65 & prob$ppv2 == 0.85,]$eta2 <- a[[3]][1]
prob[prob$pi == 0.3 & prob$xi1 == 0.75 & prob$xi2 == 0.75 & prob$ppv1 == 0.65 & prob$ppv2 == 0.85,]$eta2
prob[prob$pi == 0.3 & prob$xi1 == 0.75 & prob$xi2 == 0.75 & prob$ppv1 == 0.65 & prob$ppv2 == 0.85,]
a
a[[1]]
a[[1]][1,]
a[[1]][,1]
a[[1]][,1]
prob[prob$pi == 0.3 & prob$xi1 == 0.75 & prob$xi2 == 0.75 & prob$ppv1 == 0.65 & prob$ppv2 == 0.85,]
ncol(prob)
prob[prob$pi == 0.3 & prob$xi1 == 0.75 & prob$xi2 == 0.75 & prob$ppv1 == 0.65 & prob$ppv2 == 0.85,c(8:25)]
a[[1]][,1]
a
prob[prob$pi == 0.3 & prob$xi1 == 0.75 & prob$xi2 == 0.75 & prob$ppv1 == 0.65 & prob$ppv2 == 0.85,c(8:25)]
c(a[[1]][,1], a[[1]][,2])
c(a[[1]][,1], a[[1]][,2])
prob[prob$pi == 0.3 & prob$xi1 == 0.75 & prob$xi2 == 0.75 & prob$ppv1 == 0.65 & prob$ppv2 == 0.85,c(8:25)] <- c(a[[1]][,1], a[[1]][,2])
View(prob)
result <- wrap_ppv_simulation("power", equal_hypothesis = TRUE, setN, prob)
View(result)
result <- wrap_ppv_simulation("power", equal_hypothesis = TRUE, setN, prob)
View(result)
a <- ppv_prob_generate(0.3, 0.75,0.75,0.65,0.85, equal_hypothesis = T)
a
a <- ppv_prob_generate(0.3, 0.75,0.75,0.65,0.85, equal_hypothesis = T)
a
a <- ppv_prob_generate(0.3, 0.75,0.75,0.65,0.85, equal_hypothesis = T)
a
a <- ppv_prob_generate(0.3, 0.75,0.75,0.65,0.85, equal_hypothesis = T)
a
a <- ppv_prob_generate(0.3, 0.75,0.75,0.65,0.85, equal_hypothesis = T)
a
prob[prob$pi == 0.3 & prob$xi1 == 0.75 & prob$xi2 == 0.75 & prob$ppv1 == 0.65 & prob$ppv2 == 0.85,]$eta1 <- a[[3]][1]
prob[prob$pi == 0.3 & prob$xi1 == 0.75 & prob$xi2 == 0.75 & prob$ppv1 == 0.65 & prob$ppv2 == 0.85,]$eta2 <- a[[3]][1]
prob[prob$pi == 0.3 & prob$xi1 == 0.75 & prob$xi2 == 0.75 & prob$ppv1 == 0.65 & prob$ppv2 == 0.85,c(8:25)] <- c(a[[1]][,1], a[[1]][,2])
result <- wrap_ppv_simulation("power", equal_hypothesis = TRUE, setN, prob)
View(result)
prob <- wrap_ppv_prob_generate(PI, XI, PPV, equal_hypothesis = TRUE)
result <- wrap_ppv_simulation("power", equal_hypothesis = TRUE, setN, prob)
View(result)
read.table(result, "./data/ppv_power_equal_1019.csv")
read.table("./data/ppv_power_equal_1019.csv")
read.csv("./data/ppv_power_equal_1019.csv")
ppv_power_equal <- read.csv("./data/ppv_power_equal_1019.csv")
ppv_power_equal$pi
ppv_power_equal$pi
ppv_power_equal$ppv1
ppv_power_equal$ppv2
ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.85,]
case11 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.85,]
case1 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.85,]
plot(N200~xi1, data=case1)
plot(N200~xi1, data=case1, xlab=expression(xi))
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power")
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='l')
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='l')
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power")
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='b')
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='b')
plot(N350~xi1, data=case1, xlab=expression(xi), ylab="power", type='b')
plot(N500~xi1, data=case1, xlab=expression(xi), ylab="power", type='b')
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='b')
lines(N350~xi1, data=case1, type='b')
lines(N500~xi1, data=case1, type='b')
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1))
lines(N350~xi1, data=case1, type='b')
lines(N500~xi1, data=case1, type='b')
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.4,1))
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N350~xi1, data=case1, type='b')
lines(N500~xi1, data=case1, type='b')
?text
text(0.9, 0.8, "n=200")
text(0.85, 0.8, "n=200")
text(0.88, 0.8, "n=200")
text(0.88, 0.9, "n=200")
text(0.88, 0.98, "n=200")
text(0.88, 1, "n=200")
text(0.86, 1, "n=200")
text(0.87, 1, "n=200")
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N350~xi1, data=case1, type='b')
lines(N500~xi1, data=case1, type='b')
text(0.87, 1, "n=200")
text(0.87, 0.85, "n=200")
case1
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N350~xi1, data=case1, type='b')
lines(N500~xi1, data=case1, type='b')
text(0.87, 1, "n=500")
text(0.87, 0.85, "n=350")
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N350~xi1, data=case1, type='b')
lines(N500~xi1, data=case1, type='b')
text(0.87, 1, "n=500")
text(0.87, 0.9, "n=350")
text(0.87, 0.6, "n=200")
text(0.87, 0.92, "n=350")
text(0.87, 0.93, "n=350")
text(0.87, 0.94, "n=350")
text(0.87, 0.7, "n=200")
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N350~xi1, data=case1, type='b')
lines(N500~xi1, data=case1, type='b')
text(0.87, 1, "n=500")
text(0.87, 0.94, "n=350")
text(0.87, 0.7, "n=200")
case2 <- ppv_power_equal[ppv_power_equal$pi == 0.3,]
case2
case2_1 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.75,]
case2_2 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.85,]
case2_3 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.75 & ppv_power_equal$ppv2 == 0.95,]
case2_1
case2_3
case2_1 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.75,]
case2_2 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.85,]
case2_3 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.75 & ppv_power_equal$ppv2 == 0.95,]
plot(N500~xi1, data=case2_1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
plot(N500~xi1, data=case2_1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N500~xi1, data=case2_2, type='b')
lines(N500~xi1, data=case2_3, type='b')
case2_1 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.75,]
case2_2 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.85,]
case2_3 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.75 & ppv_power_equal$ppv2 == 0.95,]
plot(N500~xi1, data=case2_1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N500~xi1, data=case2_2, type='b')
lines(N500~xi1, data=case2_3, type='b')
case2_3
case2_2
case2_1
case2_2
case2_3
lines(N500~xi1, data=case2_3, type='b')
text(0.6, 1, "n=500")
text(0.6, 0.94, "n=350")
text(0.6, 0.7, "n=200")
text(0.6, 0.94, "n=500")
text(0.6, 0.65, "n=350")
text(0.6, 0.3, "n=200")
case2_1 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.75,]
case2_2 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.85,]
case2_3 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.75 & ppv_power_equal$ppv2 == 0.95,]
plot(N500~xi1, data=case2_1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N500~xi1, data=case2_2, type='b')
lines(N500~xi1, data=case2_3, type='b')
text(0.6, 0.94, "n=500")
text(0.6, 0.65, "n=350")
text(0.6, 0.3, "n=200")
text(0.6, 0.28, "n=200")
case2_1 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.75,]
case2_2 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.85,]
case2_3 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.75 & ppv_power_equal$ppv2 == 0.95,]
plot(N500~xi1, data=case2_1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N500~xi1, data=case2_2, type='b')
lines(N500~xi1, data=case2_3, type='b')
text(0.6, 0.94, "PPV1=0.65, PPV2=0.75")
text(0.6, 0.65, "PPV1=0.65, PPV2=0.85")
text(0.6, 0.28, "PPV1=0.75, PPV2=0.95")
case2_1 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.75,]
case2_2 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.85,]
case2_3 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.75 & ppv_power_equal$ppv2 == 0.95,]
plot(N500~xi1, data=case2_1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N500~xi1, data=case2_2, type='b')
lines(N500~xi1, data=case2_3, type='b')
text(0.6, 0.94, "PPV1=0.65, PPV2=0.75")
text(0.6, 0.65, "PPV1=0.65, PPV2=0.85")
text(0.6, 0.27, "PPV1=0.75, PPV2=0.95")
case2_2
case2_1 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.75,]
case2_2 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.85,]
case2_3 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.75 & ppv_power_equal$ppv2 == 0.95,]
plot(N500~xi1, data=case2_1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N500~xi1, data=case2_2, type='b')
lines(N500~xi1, data=case2_3, type='b')
ppv_power_equal <- read.csv("./data/ppv_power_unequal_1019.csv")
ppv_power_equal <- read.csv("./data/ppv_power_nonequal_1019.csv")
ppv_power_equal <- read.csv("./data/ppv_power_equal_1019.csv")
ppv_power_nonequal <- read.csv("./data/ppv_power_nonequal_1019.csv")
case3 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85,]
case3
case3 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.5,]
case3_1 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.5,]
case3_1 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.75,]
case3_1 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.5,]
case3_1 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.75,]
case3_1 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.85,]
case3_1 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.5,]
case3_2 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.75,]
case3_3 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.85,]
case3_2
case3_1
case3_3
ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85,]
ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85,]
case3_1 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.5,]
case3_2 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.75,]
case3_3 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.85,]
case3_2
case3_3
ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85,]
dev.list()
?png
dev.list('./plot/case1.png')
png('./plot/case1.png')
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N350~xi1, data=case1, type='b')
lines(N500~xi1, data=case1, type='b')
text(0.87, 1, "n=500")
text(0.87, 0.94, "n=350")
text(0.87, 0.7, "n=200")
dev.list()
dev.off(4)
dev.list()
dev.off(3)
dev.list()
png('./plot/case1.png',600,400)
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N350~xi1, data=case1, type='b')
lines(N500~xi1, data=case1, type='b')
text(0.87, 1, "n=500")
text(0.87, 0.94, "n=350")
text(0.87, 0.7, "n=200")
dev.off(3)
dev.list()
case1 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.85,]
png('./plot/case1.png',600,400)
plot(N200~xi1, data=case1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N350~xi1, data=case1, type='b')
lines(N500~xi1, data=case1, type='b')
text(0.87, 1, "n=500")
text(0.87, 0.94, "n=350")
text(0.87, 0.7, "n=200")
dev.off(3)
# case 2
png('./plot/case2.png',600,400)
case2_1 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.75,]
case2_2 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.65 & ppv_power_equal$ppv2 == 0.85,]
case2_3 <- ppv_power_equal[ppv_power_equal$pi == 0.3 & ppv_power_equal$ppv1 == 0.75 & ppv_power_equal$ppv2 == 0.95,]
plot(N500~xi1, data=case2_1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N500~xi1, data=case2_2, type='b')
lines(N500~xi1, data=case2_3, type='b')
text(0.6, 0.94, "PPV1=0.65, PPV2=0.75")
text(0.6, 0.65, "PPV1=0.65, PPV2=0.85")
text(0.6, 0.27, "PPV1=0.75, PPV2=0.95")
dev.off(3)
case3_1
case3_2
case3_3
plot(N500~xi2, data=case3_1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,0.9))
lines(N500~xi2, data=case3_2, type='b')
lines(N500~xi2, data=case3_3, type='b')
plot(N500~xi2, data=case3_1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,1))
lines(N500~xi2, data=case3_2, type='b')
lines(N500~xi2, data=case3_3, type='b')
ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85,]
case3_1 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.5,]
case3_2 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.75,]
case3_3 <- ppv_power_nonequal[ppv_power_nonequal$pi == 0.3 & ppv_power_nonequal$ppv1 == 0.65 & ppv_power_nonequal$ppv2 == 0.85 & ppv_power_nonequal$xi1 == 0.85,]
plot(N500~xi2, data=case3_1, xlab=expression(xi), ylab="power", type='b', ylim=range(0,1), xlim=range(0.5,1))
lines(N500~xi2, data=case3_2, type='b')
lines(N500~xi2, data=case3_3, type='b')
